import { NodeTypeOption } from "three/examples/jsm/nodes/core/constants.js";
import Node from "three/examples/jsm/nodes/core/Node.js";
import NodeBuilder from "three/examples/jsm/nodes/core/NodeBuilder.js";
import { ShaderNodeObject } from "three/examples/jsm/nodes/shadernode/ShaderNode.js";

export interface CodeNodeInclude {
    build(builder: NodeBuilder): void;
}

export default class CodeNode extends Node {
    isCodeNode: true;
    code: string;
    constructor(code?: string, includes?: CodeNodeInclude[]);

    setIncludes(includes: CodeNodeInclude[]): this;
    getIncludes(builder: NodeBuilder): CodeNodeInclude[];
}

export const code: (code: string, nodeType?: NodeTypeOption) => ShaderNodeObject<CodeNode>;
