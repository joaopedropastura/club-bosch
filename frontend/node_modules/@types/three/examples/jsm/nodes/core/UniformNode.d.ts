import { ShaderNodeObject } from "three/examples/jsm/nodes/shadernode/ShaderNode.js";
import { NodeTypeOption } from "three/examples/jsm/nodes/core/constants.js";
import InputNode from "three/examples/jsm/nodes/core/InputNode.js";
import Node from "three/examples/jsm/nodes/core/Node.js";
import NodeBuilder from "three/examples/jsm/nodes/core/NodeBuilder.js";

export default class UniformNode<Value> extends InputNode<Value> {
    readonly isUniformNode: true;

    constructor(value: Value, nodeType?: NodeTypeOption | null);

    getUniformHash(builder: NodeBuilder): string;
}

export const uniform: <Value>(
    arg1: InputNode<Value> | Value,
    arg2?: Node | string,
) => ShaderNodeObject<UniformNode<Value>>;
